% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lineclass.R
\name{translate}
\alias{translate}
\title{Translates a R function into a Rcpp function}
\usage{
translate(f, desired_type = "SEXP")
}
\arguments{
\item{f}{The function which should be translated from R to C++.}

\item{desired_type}{The desired type which should be used for input and output. Default is SEXP.}
}
\value{
The already compiled Rcpp function.
}
\description{
Translates a R function into a Rcpp function
}
\details{
Allowed function which can be used:

"=", "<-", "[", "for", "c", ":", "sin", "asin", "sinh", "cos", "acos", "cosh",

"tan", "atan", "tanh", "log", "^", "+", "-",



"==", "!=", ">", ">=", "<", "<=", "print", "return",

"vector", "matrix", "length", "dim"

Be aware that the R code is translated to ETR. An expression template library which tries to mimic R.

However, it does not behave exactly like R! Please check your compiled function before using it in a serious project.

If you want to see how ETR differs from R in detail check the vignette
}
\examples{
f <- function() { print("Hello World!")}
f_compiled <- translate(f)
}
